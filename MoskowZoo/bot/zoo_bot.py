import telebot
import re
from telebot import types
from config import TOKEN
from extensions import InputException
from questions import QuestionsAboutAnimals


# 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)


# 2. –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º (/start –∏ /help).
@bot.message_handler(commands=['start', 'help'])
def start(message):
    text = ('üëãüèº –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –¢—ã –ø–æ–ø–∞–ª –Ω–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –ú–æ—Å–∫–æ–≤—Å–∫–∏–º –∑–æ–æ–ø–∞—Ä–∫–æ–º, \
–Ω–∞ —Ç–µ–º—É "–ö–∞–∫–æ–µ —É –≤–∞—Å —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ?". \n\n–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö \
–∑–æ–æ–ø–∞—Ä–∫–æ–≤ –ï–≤—Ä–æ–ø—ã, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –µ–≥–æ –æ–±–∏—Ç–∞—Ç–µ–ª—è–º–∏ –≤ —Ñ–æ—Ä–º–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è? \n\n\
–¢–æ–≥–¥–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äì "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç". \n\n‚ÄºÔ∏è –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–æ–∂–µ—Ç–µ —Ç–∞–∫–∂–µ —Å–≤—è–∑–∞—Ç—å—Å—è \
—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞, –Ω–∞–∂–∞–≤ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.')
    bot.send_message(message.chat.id, text)
    button_start(message)


# 3. –í—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç" –∏ "–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞".
@bot.message_handler(commands=['button'])
def button_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    item1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")
    item2 = types.KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞")
    markup.add(item1)
    markup.add(item2)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)


# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞ –æ—à–∏–±–∫—É.
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    try:
        if message.text.lower() != '–Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç':
            if message.text.lower() != '—Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞':
                raise InputException("–í–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!")
        if message.text.lower() == '–Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç':
            ask_question(message)
        elif message.text.lower() == '—Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞':
            contact_zoo_staff(message)
    except InputException as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: \n{e}")


# 5. –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∑–æ–æ–ø–∞—Ä–∫–∞.
def contact_zoo_staff(message):
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞", url="https://t.me/alexandetto")
    keyboard.add(url_button)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=keyboard)


# 6. –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∫–Ω–æ–ø–æ–∫ —Å –æ—Ç–≤–µ—Ç–∞–º–∏.
k = -1
def output_question_and_answers(message):
    global k
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = []
    k += 1
    for var in list(QuestionsAboutAnimals.items())[k][1]:
        buttons.append(types.KeyboardButton(text=var))
    keyboard.add(*buttons)

    return keyboard


# 7. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫–æ–ª—å—Ü–µ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –º–µ—Ç–æ–¥–∞.
@bot.message_handler(func=lambda msg: msg.text == '–Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç' or re.search(r'\d\.\s', msg.text))
def ask_question(message: types.Message):
    global k
    kb = output_question_and_answers(message)
    msg = bot.send_message(message.chat.id, text=list(QuestionsAboutAnimals.items())[k][0], reply_markup=kb)
    bot.register_next_step_handler(msg, ask_question)



# 8. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞.
@bot.message_handler(func=lambda message: True)
def process_answer(message):
    pass


# 9. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞.
if __name__ == '__main__':
    bot.infinity_polling()